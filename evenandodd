# Python code to split into even and odd lists
# Funtion to split
def Split(mix):
    ev_li = []
    od_li = []
    for i in mix:
        if (i % 2 == 0):
            ev_li.append(i)
        else:
            od_li.append(i)
    print("Even lists:", ev_li)
    print("Odd lists:", od_li)
 
# Split odd and even indexes
mix = [2, 5, 13, 17, 51, 62, 73, 84, 95]
Split(mix)

def even_odd_split(seq):
    """
    >>> even_odd_split([4, 8, 12, 16])
    [4, 12, 8, 16]
    >>> even_odd_split([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
    [1, 3, 5, 7, 9, 2, 4, 6, 8, 10]
    """
    assert(len(seq) % 2 == 0)
    assert(len(seq) > 1)

    def _split(seq):
        if len(seq) == 0: return [], []

        a, b = _split(seq[2:])
        return [seq[0]] + a, [seq[1]] + b
    a, b = _split(seq)
    return a + b

if __name__ == '__main__':
    import doctest
    doctest.testmod()
    
    
    #Another way
    def f(l):
    if len(l) == 1:
        # only one element left
        return l
    if len(l) % 2 == 0:
        # length is even
        return l[:1] + f(l[1:])
    else:
        # length is odd
        return f(l[1:]) + l[:1]
        
        
    list_A = []

def OddEvenRecursion(number):
    """ Returns a set and a sum of numbers in the set using recursion """
    
    try:
        #Append the list with odd or even numbers
        list_A.append(number)
    
        if number == 0 or number == 1 or number == -1:
            # Display the even numbers' set and the sum of these numbers
            print "\n<The numbers' set : %s \n\n<And the sum is :" % \
              list_A
            return number
        elif number < 1:
            return number + OddEvenRecursion(number + 2)
        else:
            return number + OddEvenRecursion(number - 2)

    except TypeError:
        print 'Please enter an integer.'
    
if __name__ == "__main__":
    
    # testing an odd value.
    odd = OddEvenRecursion(7) 
    print odd
    # Empty the list
    del list_A[:]
    # testing a negative odd  value.
    negativeOdd = OddEvenRecursion(-7) 
    print negativeOdd
    # Empty the list
    del list_A[:]    
    # testing an even value.
    even = OddEvenRecursion(8) # testing an even value.
    print even
    # Empty the list
    del list_A[:]
    # testing a negative even value.
    negativeEven = OddEvenRecursion(-8) # testing an even value.
    print negativeEven    
